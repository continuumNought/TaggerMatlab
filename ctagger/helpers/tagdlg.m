function response = tagdlg(fieldname, fieldValues)
% GUI for input needed to create inputs for tagdir function

% Setup the variables used by the GUI
    response = 'Cancel';
    maxLines = 10;
    theTitle = ['How do you want to handle the ' fieldname ' field?'];
    numFields = 1;
    if isempty(fieldValues)
        displayFields = ' ';
    elseif ischar(fieldValues)
        displayFields = fieldValues;
    elseif iscellstr(fieldValues)
        numFields = min(maxLines, length(fieldValues));
        displayFields = fieldValues(1:numFields);
        if length(fieldValues) > maxLines
            displayFields{maxLines} = '. . . etc . . .';
        end
    end
    inputFig = figure( ...
        'MenuBar', 'none', ...
        'Name', theTitle, ...
        'NextPlot', 'add', ...
        'NumberTitle','off', ...
        'Resize', 'on', ...
        'Tag', theTitle, ...
        'Toolbar', 'none', ...
        'Visible', 'off', ...
        'WindowStyle', 'modal');
    createLayout(inputFig);
    movegui(inputFig); % Make sure it is visible
    uiwait(inputFig);

    function buttons = createButtonPanel(parent)
        % Create the button panel on the side of GUI
        buttons = uiextras.Grid('Parent', parent, ...
            'Tag', 'SaveGrid', 'Spacing', 2, 'Padding', 1);
        uiextras.Empty('Parent', buttons);
        uicontrol('Parent', buttons, ...
            'Style', 'pushbutton', 'Tag', 'TagButton', ...
            'String', 'Tag', 'Enable', 'on', 'Tooltip', ...
            ['Tag values associated with ' fieldname], ...
            'Callback', {@buttonCallback, 'Tag'});
        uicontrol('Parent', buttons, ...
            'Style', 'pushbutton', 'Tag', 'SkipButton', ...
            'String', 'Skip', 'Enable', 'on', 'Tooltip', ...
            ['Don''t edit tag values associated with field ' fieldname], ...
            'Callback', {@buttonCallback, 'Skip'});
       uicontrol('Parent', buttons, ...
            'Style', 'pushbutton', 'Tag', 'RemoveButton', ...
            'String', 'Exclude', 'Enable', 'on', 'Tooltip', ...
            ['Exclude field ' fieldname ' from tagging'], ...
            'Callback', {@buttonCallback, 'Exclude'});
        uicontrol('Parent', buttons, ...
            'Style', 'pushbutton', 'Tag', 'CancelButton', ...
            'String', 'Cancel', 'Enable', 'on', 'Tooltip', ...
            'Cancel with no changes', ...
            'Callback', {@buttonCallback, 'Cancel'});
        uiextras.Empty('Parent', buttons);
        set(buttons, 'RowSizes', 30, 'ColumnSizes', [-1 100 100 100 100 -1]);
    end % createButtonPanel

    function createLayout(parent)
        % Create the layout for the GUI but do not display
        mainVBox = uiextras.VBox('Parent', parent, ...
            'Tag', 'MainVBox',  'Spacing', 5, 'Padding', 5);

        uiextras.Empty('Parent', mainVBox);
        panel = uiextras.Panel('Parent', mainVBox, 'Title', ...
               ['The ' fieldname ' field has values:'], 'Padding', 10);
        uicontrol('Parent', panel, ...
            'Style','text', 'String', displayFields, ...
            'HorizontalAlignment', 'Left');
        uiextras.Empty('Parent', mainVBox);
        createButtonPanel(mainVBox);
        uiextras.Empty('Parent', mainVBox);
        set(mainVBox, 'Sizes', [10, 20+30*numFields,  -1, 40, 10]);
        drawnow
    end % createLayout

    function buttonCallback(src, eventdata, responseValue) %#ok<INUSL>
        % Callback for browse button sets a directory for control
        response = responseValue;
        close(inputFig);
    end % buttonCtrlCallback

end % tagdlg